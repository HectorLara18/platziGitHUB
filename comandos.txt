git init
git add
git status
git --global user.name
git --global user.email
git config --list
git --list
git commit -m
git log
git reset "" --hard
git log --stat
git checkout "version" "nombre del archivo"
git checkout master "nombre del archivo"
git clone url -> trae la version master a tu reposorio local 
git fetch  -> trae as actuaslizaciones de ottro miemro de tu equipo a tu repositorrio
git merg -> fuciona as otras versiones con tus versiones 
git pull ->
git branch -> para abrr una rama 
git checkout ->
git remote add origin
$ git pull origin master --allow-unrelated-histories
git branch -m master2 master1
git fetch origin
git branch -u origin/master1 master1
$ ssh-keygen -t rsa -b 4096 -C "hectorlaras.18@gmail.com"
$ ssh-add ~/.ssh/id_rsa
git log --graph
git clone  "" -> sirve para clonar un repositorio publico
git rebase -> sirve para unificar ramas en repositorios locales 
git stash -> guardar cambios en memoria y recuperarlos despues 
git pop -> sirve para recuperar los cambios realizados antes de git stash
git stash drop -> sirve para borrar los cambios 
git stash branch -> sirve para crear una rama nueva a base de los cambios 
gitk -> sirve para ver la historia de las ramas
git clean --dry-run -> te muestra lo que sera borrado
git -f -> borra archivos 
con el archivo gitignore mencionas los archivos que no seran tomados en cuenta para git para descartarlos se usa *.jpg ejemplo
git cherry-pick -> sirve para traer cambios hechos con un commit especifico
git commit --amend
gitk -> sirve para ver la historia de las ramas
git reflog
git reset --soft
git reset --hard
git grep  -> sirve para buscar palabras
git grep -n -> sirve para buscar la cantidad de veces que has utilizado una palabras
git grep -c -> lo divide por archivo 
git log -s -> buscas los commits